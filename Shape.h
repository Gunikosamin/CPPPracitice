#pragma once
#include <memory>

//図形データ
#include "Object.h"

//図形の描画
class Shape
{
	//図形データ
	std::shared_ptr<const Object> object;

protected:

	//描画に使う頂点の数
	const GLsizei vertexcount;

public:

	//コンストラクタ
	// sieze:頂点の位置の次元
	// vertexcount: 頂点の数
	// vertex: 頂点属性を格納した配列
	Shape(GLint size, GLsizei vertexcount, const Object::Vertex* vertex)
		: object(new Object(size, vertexcount, vertex))
		, vertexcount(vertexcount)
	{
	}
	//描画
	void draw() const
	{
		// 頂点配列オブジェクトを結合する
		object->bind();

		//　描画を実行する
		execute();
	}

	//描画の実行j
	virtual void execute() const
	{

		//折れ線で描画する
		glDrawArrays(GL_LINE_LOOP, 0, vertexcount);

	}

};

